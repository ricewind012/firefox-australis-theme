/* - This Source Code Form is subject to the terms of the Mozilla Public
	 - License, v. 2.0. If a copy of the MPL was not distributed with this file,
	 - You can obtain one at http://mozilla.org/MPL/2.0/. */

:root {
	--in-content-page-color: #424e5a $i;
	--in-content-page-background: #fbfbfb $i;
	--in-content-text-color: #333 $i;
	--in-content-selected-text: #fff $i;
	--in-content-header-border-color: #c8c8c8 $i;
	--in-content-box-background: #fff $i;
	--in-content-box-background-odd: #f3f6fa $i;
	--in-content-box-background-hover: #ebebeb $i;
	--in-content-box-background-active: #dadada $i;
	--in-content-box-border-color: #c1c1c1 $i;
	--in-content-item-hover: rgba(0,149,221,0.25) $i;
	--in-content-item-selected: #0a84ff $i;
	--in-content-border-highlight: #ff9500 $i;
	--in-content-border-focus: #0a84ff $i;
	--in-content-border-color: #c1c1c1 $i;
	--in-content-category-text: #c1c1c1 $i;
	--in-content-category-border-focus: 1px dotted #fff $i;
	--in-content-category-text-selected: #f2f2f2 $i;
	--in-content-category-background: #424f5a $i;
	--in-content-category-background-hover: #5e6972 $i;
	--in-content-category-background-active: #343f48 $i;
	--in-content-tab-color: #424f5a $i;
	--in-content-link-color: #0a84ff $i;
	--in-content-link-color-hover: #0060df $i;
	--in-content-link-color-active: #ff9500 $i;
	--in-content-link-color-visited: #551a8b $i;
	--in-content-primary-button-background: #0a84ff $i;
	--in-content-primary-button-background-hover: #0060df $i;
	--in-content-primary-button-background-active: #003EAA $i;
	--in-content-table-border-dark-color: #d1d1d1 $i;
	--in-content-table-header-background: #0a84ff $i;

	--in-content-sidebar-width: 276px $i;
}

:root {
	font: message-box $i;
	appearance: none $i;
	background-color: var(--in-content-page-background) $i;
	color: var(--in-content-page-color) $i;
}

html|body {
	font-size: 15px $i;
	font-weight: normal $i;
	margin: 0 $i;
}

html|h1 {
	font-size: 2.5em $i;
	font-weight: lighter $i;
	line-height: 1.2 $i;
	color: var(--in-content-text-color) $i;
	margin: 0 $i;
	margin-bottom: .5em $i;
}

html|hr {
	border-style: solid none none none $i;
	border-color: var(--in-content-border-color) $i;
}

html|h2 {
	font-size: 1.3rem $i;
	font-weight: bold $i;
	line-height: 22px $i;

	xul|label > & {
		margin: 0 $i;
	}
}

description,
label {
	line-height: inherit $i;
	margin-top: 1px $i;
	margin-bottom: 2px $i;
	margin-inline-start: 6px $i;
	margin-inline-end: 5px $i;
}

$main-content = @block {
	padding-top: 40px $i;
	padding-inline-end: 44px $i; /* compensate the 4px margin of child elements */
	padding-bottom: 48px $i;
	padding-inline-start: 48px $i;
	overflow: auto $i;
}

.main-content {
	{$main-content}
}

/* groupboxes */

xul|groupbox {
	appearance: none $i;
	border: none $i;
	margin: 15px 0 0 $i;
	padding-inline-start: 0 $i;
	padding-inline-end: 0 $i;
	font-size: 1.25rem $i;
}

xul|groupbox xul|label,
xul|groupbox xul|description {
	margin-inline-start: 0 $i;
	margin-inline-end: 0 $i;
}

/* tabpanels and tabs */

xul|tabpanels {
	appearance: none $i;
	font-size: 1.25rem $i;
	line-height: 22px $i;
	border: none $i;
	padding: 0 $i;
	background-color: transparent $i;
	color: inherit $i;
}

xul|tabs {
	margin-bottom: 15px $i;
	border-top: 1px solid var(--in-content-box-border-color) $i;
	border-bottom: 1px solid var(--in-content-box-border-color) $i;
	background-color: var(--in-content-page-background) $i;
}

xul|tab {
	appearance: none $i;
	margin-top: 0 $i;
	padding: 4px 20px $i;
	min-height: 44px $i;
	color: var(--in-content-tab-color) $i;
	background-color: var(--in-content-page-background) $i;
	border-width: 0 $i;
	/* $i overrides tabbox.css RTL and visuallyselected rules */
	border-radius: 0 $i;
	transition: background-color 50ms ease 0s $i;
}

xul|tab:hover {
	background-color: var(--in-content-box-background-hover) $i;
}

xul|tab[selected] {
	background-color: var(--in-content-box-background-hover) $i;
	padding-bottom: 0 $i; /* compensate the 4px border */
	border-bottom: 4px solid var(--in-content-border-highlight) $i;
}

xul|*.tab-text {
	font-size: 1.3rem $i;
	line-height: 22px $i;
}

/* html buttons */

html|button {
	padding: 3px 10px $i;
	font: inherit $i;
}

/* xul buttons and menulists */

button,
html|select,
html|input[type="color"],
xul|menulist {
	appearance: none $i;
	min-height: 30px $i;
	color: var(--in-content-text-color) $i;
	border: 1px solid var(--in-content-box-border-color) $i;
	border-radius: 2px $i;
	background-color: var(--in-content-page-background) $i;
}

html|select:not([size]):not([multiple]) {
	background-image: url("../icons/content/in-content/dropdown.svg#dropdown") $i;
	background-position: right 3px center $i;
	background-repeat: no-repeat $i;
	background-size: auto 18px $i;
	font-size: inherit $i;
	padding-inline-start: 5px $i;
	padding-inline-end: 24px $i;
	text-overflow: ellipsis $i;
}

html|button:enabled:hover,
html|select:not([size]):not([multiple]):enabled:hover,
xul|button:not([disabled="true"]):hover,
html|input[type="color"]:not([disabled="true"]):hover,
xul|menulist:not([disabled="true"]):hover {
	background-color: var(--in-content-box-background-hover) $i;
}

html|button:enabled:hover:active,
html|select:not([size]):not([multiple]):enabled:hover:active,
xul|button:not([disabled="true"]):hover:active,
html|input[type="color"]:not([disabled="true"]):hover:active,
xul|menulist[open="true"]:not([disabled="true"]) {
	background-color: var(--in-content-box-background-active) $i;
}

html|button:disabled,
html|select:disabled,
xul|button[disabled="true"],
html|input[type="color"][disabled="true"],
xul|menulist[disabled="true"] {
	opacity: 0.5 $i;
}

*|button.primary {
	background-color: var(--in-content-primary-button-background) $i;
	border-color: transparent $i;
	color: var(--in-content-selected-text) $i;
}

html|button.primary:enabled:hover,
xul|button.primary:not([disabled="true"]):hover {
	background-color: var(--in-content-primary-button-background-hover) $i;
}

html|button.primary:enabled:hover:active,
xul|button.primary:not([disabled="true"]):hover:active {
	background-color: var(--in-content-primary-button-background-active) $i;
}

html|input[type="color"] {
	padding: 6px $i;
	width: 50px $i;
}

xul|button > xul|*.button-box,
xul|menulist > xul|*.menulist-label-box {
	padding-right: 10px $i;
	padding-left: 10px $i;
}

xul|menulist > xul|*.menulist-label-box > xul|*.menulist-icon[src] {
	margin-inline-end: 5px $i;
}

xul|*.spinbuttons-button {
	min-height: initial $i;
	margin-inline-start: 10px $i;
	margin-inline-end: 2px $i;
}

xul|*.spinbuttons-up {
	margin-top: 2px $i;
	border-radius: 1px 1px 0 0 $i;
}

xul|*.spinbuttons-down	{
	margin-bottom: 2px $i;
	border-radius: 0 0 1px 1px $i;
}

xul|*.spinbuttons-button > xul|*.button-box {
	padding: 1px 5px 2px $i;
}

xul|*.spinbuttons-up > xul|*.button-box > xul|*.button-icon {
	list-style-image: url("../icons/content/arrow/arrow-up.gif") $i;
}

xul|*.spinbuttons-up[disabled="true"] > xul|*.button-box > xul|*.button-icon {
	list-style-image: url("../icons/content/arrow/arrow-up-dis.gif") $i;
}

xul|*.spinbuttons-down > xul|*.button-box > xul|*.button-icon {
	list-style-image: url("../icons/content/arrow/arrow-dn.gif") $i;
}

xul|*.spinbuttons-down[disabled="true"] > xul|*.button-box > xul|*.button-icon {
	list-style-image: url("../icons/content/arrow/arrow-dn-dis.gif") $i;
}

dropmarker {
	appearance: none $i;
	margin-inline-end: 4px $i;
	padding: 0 $i;
	border: none $i;
	background-color: transparent $i;
	list-style-image: url("../icons/content/in-content/dropdown.svg") $i;
	-moz-context-properties: fill $i;
	fill: -moz-DialogText $i;
}

// Weird selector due to shadow DOM
link[href="chrome://global/skin/dropmarker.css"] + image {
	list-style-image: url("../icons/content/in-content/dropdown.svg") $i;
	fill: -moz-DialogText $i;
	width: 18px $i;
	height: 18px $i;
}

xul|menulist > xul|menupopup,
xul|button[type="menu"] > xul|menupopup {
	appearance: none $i;
	border: 1px solid var(--in-content-box-border-color) $i;
	border-radius: 2px $i;
	background-color: var(--in-content-box-background) $i;
}

xul|menulist > xul|menupopup xul|menu,
xul|menulist > xul|menupopup xul|menuitem,
xul|button[type="menu"] > xul|menupopup xul|menu,
xul|button[type="menu"] > xul|menupopup xul|menuitem {
	appearance: none $i;
	font-size: 1em $i;
	color: var(--in-content-text-color) $i;
	padding-top: 0.2em $i;
	padding-bottom: 0.2em $i;
	padding-inline-start: 10px $i;
	padding-inline-end: 30px $i;
}

xul|menulist > xul|menupopup > xul|menu:not([disabled="true"])[_moz-menuactive="true"],
xul|menulist > xul|menupopup > xul|menuitem:not([disabled="true"])[_moz-menuactive="true"],
xul|button[type="menu"] > xul|menupopup > xul|menu:not([disabled="true"])[_moz-menuactive="true"],
xul|button[type="menu"] > xul|menupopup > xul|menuitem:not([disabled="true"])[_moz-menuactive="true"] {
	color: var(--in-content-text-color) $i;
	background-color: var(--in-content-item-hover) $i;
}

xul|menulist > xul|menupopup > xul|menu:not([disabled="true"])[selected="true"],
xul|menulist > xul|menupopup > xul|menuitem:not([disabled="true"])[selected="true"],
xul|button[type="menu"] > xul|menupopup > xul|menu:not([disabled="true"])[selected="true"],
xul|button[type="menu"] > xul|menupopup > xul|menuitem:not([disabled="true"])[selected="true"] {
	color: var(--in-content-selected-text) $i;
	background-color: var(--in-content-item-selected) $i;
}

xul|menulist > xul|menupopup > xul|menu[disabled="true"],
xul|menulist > xul|menupopup > xul|menuitem[disabled="true"],
xul|button[type="menu"] > xul|menupopup > xul|menu[disabled="true"],
xul|button[type="menu"] > xul|menupopup > xul|menuitem[disabled="true"] {
	color: #999 $i;
	/* override the [_moz-menuactive="true"] background color from
		 global/menu.css */
	background-color: transparent $i;
}

xul|menulist > xul|menupopup xul|menuseparator,
xul|button[type="menu"] > xul|menupopup xul|menuseparator {
	appearance: none $i;
	margin: 0 $i;
	padding: 0 $i;
	border-top: 1px solid var(--in-content-box-border-color) $i;
	border-bottom: none $i;
}

/* search-textboxes */

html|input[type="email"],
html|input[type="tel"],
html|input[type="text"],
html|textarea,
xul|search-textbox {
	appearance: none $i;
	color: var(--in-content-text-color) $i;
	border: 1px solid var(--in-content-box-border-color) $i;
	border-radius: 2px $i;
	background-color: var(--in-content-box-background) $i;
}

xul|search-textbox {
	min-height: 30px $i;
	padding: 0 10px $i;
}

/* Create a separate rule to unset these styles on .tree-input instead of
	 using :not(.tree-input) so the selector specifity doesn't change. */
xul|search-textbox.tree-input {
	min-height: unset $i;
	padding-right: unset $i;
	padding-left: unset $i;
}

html|input[type="email"],
html|input[type="tel"],
html|input[type="text"],
html|textarea {
	font-family: inherit $i;
	font-size: inherit $i;
	padding: 5px 10px $i;
}

html|input[type="email"]:focus,
html|input[type="tel"]:focus,
html|input[type="text"]:focus,
html|textarea:focus,
xul|search-textbox[focused] {
	border-color: var(--in-content-border-focus) $i;
	outline: none $i;
}

html|input[type="email"]:disabled,
html|input[type="tel"]:disabled,
html|input[type="text"]:disabled,
html|textarea:disabled,
xul|search-textbox[disabled="true"] {
	opacity: 0.5 $i;
}

/* Links */

html|a,
.text-link {
	color: var(--in-content-link-color) $i;
	text-decoration: none $i;
}

html|a:hover,
.text-link:hover {
	color: var(--in-content-link-color-hover) $i;
	text-decoration: underline $i;
}

html|a:visited {
	color: var(--in-content-link-color-visited) $i;
}

html|a:hover:active,
.text-link:hover:active {
	color: var(--in-content-link-color-active) $i;
	text-decoration: none $i;
}

/* Checkboxes and radio buttons */

xul|checkbox {
	margin: 4px 2px $i;
	appearance: none $i;
}

xul|*.checkbox-check,
html|input[type="checkbox"] {
	appearance: none $i;
	width: 23px $i;
	height: 23px $i;
	border: 1px solid var(--in-content-box-border-color) $i;
	border-radius: 2px $i;
	margin: 0 $i;
	margin-inline-end: 10px $i;
	background-color: #f1f1f1 $i;
	background-image: linear-gradient(#fff, rgba(255,255,255,0.8)) $i;
	background-position: center center $i;
	background-repeat: no-repeat $i;
	box-shadow: 0 1px 1px 0 #fff, inset 0 2px 0 0 rgba(0,0,0,0.03) $i;
}

xul|checkbox:not([disabled="true"]):hover > xul|*.checkbox-check,
html|input[type="checkbox"]:not(:disabled):hover {
	border-color: var(--in-content-border-focus) $i;
}

xul|*.checkbox-check[checked] {
	list-style-image: url("../icons/content/in-content/check.svg") $i;
	-moz-context-properties: fill, stroke $i;
	fill: #2292d0 $i;
	stroke: none $i;
}

html|input[type="checkbox"]:checked {
	background-image: url("../icons/content/in-content/check.svg"), linear-gradient(#fff, rgba(255,255,255,0.8)) $i;
	-moz-context-properties: fill, stroke $i;
	fill: #2292d0 $i;
	stroke: none $i;
}

xul|checkbox[disabled="true"] > xul|*.checkbox-check,
html|input[type="checkbox"]:disabled {
	opacity: 0.5 $i;
}

xul|richlistitem > xul|*.checkbox-check {
	margin: 3px 6px $i;
}

html|*.toggle-container-with-text {
	display: flex $i;
	align-items: center $i;
}

xul|radio {
	margin-inline-start: 0 $i;
	appearance: none $i;
}

xul|*.radio-check {
	appearance: none $i;
	width: 23px $i;
	height: 23px $i;
	border: 1px solid var(--in-content-box-border-color) $i;
	border-radius: 50% $i;
	margin-inline-end: 10px $i;
	background-color: #f1f1f1 $i;
	background-image: linear-gradient(#fff, rgba(255,255,255,0.80)) $i;
	box-shadow: 0 1px 1px 0 #fff, inset 0 2px 0 0 rgba(0,0,0,0.03) $i;
}

xul|radio:not([disabled="true"]):hover > xul|*.radio-check {
	border-color: var(--in-content-border-focus) $i;
}

xul|*.radio-check[selected] {
	list-style-image: url("../icons/content/in-content/radio.svg") $i;
	-moz-context-properties: fill $i;
	fill: #2292d0 $i;
}

xul|radio[disabled="true"] > xul|*.radio-check {
	opacity: 0.5 $i;
}

xul|*.radio-label-box {
	margin-inline-start: -1px $i; /* negative margin for the transparent border */
	margin-inline-end: 10px $i;
	padding-inline-start: 0 $i;
}

/* header */

$header = @block {
	border-bottom: 1px solid var(--in-content-header-border-color) $i;
	margin-inline-end: 4px $i; /* add the 4px end-margin of other elements */
	margin-bottom: 15px $i;
	padding-bottom: 15px $i;
	align-items: baseline $i;
}

.header {
	{$header}
}

$header-name = @block {
	font-size: 2.5rem $i;
	font-weight: normal $i;
	line-height: 40px $i;
	margin: 0 $i;
	user-select: none $i;
}

.header-name {
	{$header-name}
}

/* List boxes */

html|select[size][multiple],
xul|richlistbox,
xul|listbox {
	appearance: none $i;
	margin-inline-start: 0 $i;
	background-color: var(--in-content-box-background) $i;
	border: 1px solid var(--in-content-box-border-color) $i;
	color: var(--in-content-text-color) $i;
}

html|select[size][multiple] > html|option,
xul|treechildren::-moz-tree-row,
xul|listbox xul|listitem {
	padding: 0.3em $i;
	margin: 0 $i;
	border: none $i;
	border-radius: 0 $i;
	background-image: none $i;
}

html|select[size][multiple] > html|option:hover,
xul|treechildren::-moz-tree-row(hover),
xul|listbox xul|listitem:hover {
	background-color: var(--in-content-item-hover) $i;
}

xul|treechildren::-moz-tree-row(selected),
xul|listbox xul|listitem[selected="true"] {
	background-color: var(--in-content-item-selected) $i;
	color: var(--in-content-selected-text) $i;
}

/* Trees */

xul|tree {
	appearance: none $i;
	font-size: 1em $i;
	border: 1px solid var(--in-content-box-border-color) $i;
	background-color: var(--in-content-box-background) $i;
	margin: 0 $i;
}

xul|tree:-moz-focusring,
xul|richlistbox:-moz-focusring {
	border: 1px dotted var(--in-content-border-focus) $i;
}

xul|listheader,
xul|treecols {
	appearance: none $i;
	border: none $i;
	border-bottom: 1px solid var(--in-content-border-color) $i;
	padding: 0 $i;
}

.autocomplete-tree > xul|treecols {
	border-bottom: none $i;
}

xul|treecol:not([hideheader="true"]),
xul|treecolpicker {
	appearance: none $i;
	border: none $i;
	background-color: var(--in-content-box-background-hover) $i;
	color: #808080 $i;
	padding: 5px 10px $i;
}

xul|treecol:not([hideheader="true"]):not([sortable="false"]):hover,
xul|treecolpicker:hover {
	background-color: var(--in-content-box-background-active) $i;
	color: var(--in-content-text-color) $i;
}

xul|treecol:not([hideheader="true"]):not(:first-child),
xul|treecolpicker {
	border-inline-start-width: 1px $i;
	border-inline-start-style: solid $i;
	border-image: linear-gradient(transparent 0%, transparent 20%, #c1c1c1 20%, #c1c1c1 80%, transparent 80%, transparent 100%) 1 1 $i;
}

xul|treecol:not([hideheader="true"]) > xul|*.treecol-sortdirection[sortDirection] {
	list-style-image: url("../icons/content/in-content/dropdown.svg") $i;
	-moz-context-properties: fill $i;
	fill: -moz-DialogText $i;
	width: 18px $i;
	height: 18px $i;
}

xul|treecol:not([hideheader="true"]) > xul|*.treecol-sortdirection[sortDirection="ascending"] {
	transform: scaleY(-1) $i;
}

/* This is the only way to increase the height of a tree row unfortunately */
xul|treechildren::-moz-tree-row {
	min-height: 2em $i;
}

/* Color needs to be set on tree cell in order to be applied */
xul|treechildren::-moz-tree-cell-text {
	color: var(--in-content-text-color) $i;
}

xul|treechildren::-moz-tree-cell-text(selected) {
	color: var(--in-content-selected-text) $i;
}

xul|tab[visuallyselected] {
	/* Override styles for tab[selected] from
		 toolkit/themes/linux/global/tabbox.css */
	margin-bottom: 0 $i;
	border-bottom-left-radius: 0 $i;
	border-bottom-right-radius: 0 $i;
}

button,
html|input[type="color"],
xul|menulist {
	margin: 2px 4px $i;
}

xul|button:-moz-focusring {
	outline: 1px dotted $i;
	outline-offset: -2px $i;
}

xul|button > xul|*.button-box,
xul|menulist > xul|*.menulist-label-box {
	appearance: none $i;
}

xul|*.groupbox-body {
	padding-inline-start: 0 $i;
}

xul|menulist {
	font-size: inherit $i;
}

dropmarker {
	margin-top: 6px $i;
	margin-bottom: 6px $i;
}

xul|*.checkbox-check {
	background-image: none $i;
}

xul|*.checkbox-check[checked] {
	fill: -moz-dialogText $i;
	stroke: none $i;
	background-color: -moz-dialog $i;
}

xul|radio {
	align-items: center $i;
}

xul|*.radio-check {
	background-image: none $i;
}

xul|*.radio-check[selected] {
	background-color: -moz-dialog $i;
	fill: -moz-dialogText $i;
}

xul|*.radio-label-box {
	appearance: none $i;
}

/* Override OS-theme-based color to make it visible
	 on dark color themes. */
xul|radio:not([disabled="true"]):hover,
xul|checkbox:not([disabled="true"]):hover {
	color: var(--in-content-text-color) $i;
}

xul|*.numberbox-input-box {
	appearance: none $i;
	border-width: 0 $i;
}

xul|menulist:-moz-focusring > xul|*.menulist-label-box,
xul|radio[focused="true"] > xul|*.radio-label-box,
html|input[type="checkbox"]:-moz-focusring + html|label:before {
	outline: 1px dotted $i;
}

xul|spinbuttons {
	appearance: none $i;
}

xul|treechildren::-moz-tree-row(multicol, odd) {
	background-color: var(--in-content-box-background-odd) $i;
}

/* These rules are duplicated from common.inc.css
 * because above -moz-tree-row(multicol, odd) rule 
 * overrides also hover/selected states. 
 */
xul|treechildren::-moz-tree-row(hover) {
	background-color: var(--in-content-item-hover) $i;
}

xul|treechildren::-moz-tree-row(selected) {
	background-color: var(--in-content-item-selected) $i;
}

